/**
 * @author Troitskaya Tamara (TT6)
 */

/*
 * 16.03.2023:
 * @TODO
 *   в add, update, add_if_max, remove_lower, insert_at используется один и тот же большой кусок кода... но как мы будем возвращать полученные значения, если они все разной природы?
 *      в теории можно создать под это класс... может, какой-нибудь из внутренних..
 *   input as json
 *   : this command doesn't exist yet. - исправить
 *   шаблон проектирования Builder - так как вообще-то лучше не юзать конструкторы.
 *   command pattern
 *   переписать javadoc на один язык и в одном стиле
 *   new gradle project...
 *   execute script:
 *      не надо писать предложения ввести данные - когда весь код будет написан, loop скопировать в execute_script и в Client.run()
 *      написать исключение, связанное с тем, что скрипт потом сам себя вызывает и получается бесконечный цикл
 *      выход: можно считать глубину, типо кол-во раз, сколько вызывается execute_script или кол-во
 *          команд, после которого программа выдаёт что-то типо 'хватит уже'.
 *   сделать сортировку по умолчанию: типо печатать и хранить в порядке возрастания индексов? но compare же по distance...
 *   пофиксить что при вооде из defaultcollection.txt loc1 считывается с 'лидирующим пробелом'.
 *   написать в readme что всегда вводить все элементы на разных строках и написать что в defaultcollection первое число - кол-во эл-тов
 *      и написать там границы чисел для ввода (hashcode in Route: может получиться очень большое число)
 */

import management.Client;

/**
 * var: 81476
 * 368924
 */
public class Main {

    /**
     * Entry point.
     * @param args - arguments from cmd.
     */
    public static void main(String [] args) {
        Client client = new Client();
        client.run();
    }
}
